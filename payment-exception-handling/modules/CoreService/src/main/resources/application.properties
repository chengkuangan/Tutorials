
# Generic
%dev.quarkus.http.port=8081

%prod.quarkus.http.port=8080
quarkus.http.host=0.0.0.0
%dev.quarkus.log.category."blog.braindose".level=DEBUG

# Database
quarkus.datasource.db-kind = postgresql
quarkus.hibernate-orm.dialect=org.hibernate.dialect.PostgreSQLDialect
quarkus.hibernate-orm.database.generation.create-schemas=true
quarkus.hibernate-orm.database.default-schema=core
%dev.quarkus.datasource.username = core
%dev.quarkus.datasource.password = core
%dev.quarkus.datasource.jdbc.url = jdbc:postgresql://localhost:5433/core?currentSchema=core
#%prod.quarkus.datasource.jdbc.url = jdbc:postgresql://${POSTGRES_HOST}/${POSTGRES_DATABASE}?currentSchema=core
%dev.quarkus.hibernate-orm.database.generation=drop-and-create
%prod.quarkus.hibernate-orm.database.generation=update
#%dev.quarkus.hibernate-orm.database.generation=update
%dev.quarkus.hibernate-orm.log.sql=true
%prod.quarkus.hibernate-orm.log.sql=false
%prod.quarkus.hibernate-orm.sql-load-script=import.sql

#%prod.quarkus.datasource.username = ${POSTGRES_USER}
#%prod.quarkus.datasource.password = ${POSTGRES_PASSWORD}
#%prod.quarkus.datasource.jdbc.url = jdbc:postgresql://${POSTGRES_HOST}/core?currentSchema=core
#%prod.quarkus.hibernate-orm.database.generation=drop-and-create
#%prod.quarkus.hibernate-orm.sql-load-script=import.sql
#%prod.quarkus.hibernate-orm.dialect=org.hibernate.dialect.PostgreSQLDialect
#%prod.quarkus.hibernate-orm.log.sql=false
#%prod.quarkus.hibernate-orm.database.generation.create-schemas=true
#%prod.quarkus.hibernate-orm.database.default-schema=core

# Debezium outbox
quarkus.debezium-outbox.table-name=ResponseOutboxEvent
%dev.quarkus.debezium-outbox.remove-after-insert=false
%prod.quarkus.debezium-outbox.remove-after-insert=true

# Kafka settings
mp.messaging.incoming.casa-in.connector=smallrye-kafka
mp.messaging.incoming.casa-in.value.deserializer=org.apache.kafka.common.serialization.StringDeserializer
mp.messaging.incoming.casa-in.health-readiness-enabled=false
mp.messaging.incoming.casa-in.health-enabled=false
mp.messaging.incoming.casa-in.failure-strategy=ignore

%dev.kafka.bootstrap.servers=192.168.0.3:9092
mp.messaging.incoming.casa-in.topic=casa.events
mp.messaging.incoming.casa-in.group.id=core

%prod.kafka.bootstrap.servers=${KAFKA_SERVER} 
#%prod.mp.messaging.incoming.casa-in.topic=${KAFKA_TOPIC}
#%prod.mp.messaging.incoming.casa-in.group.id=${KAFKA_CONSUMER_GROUP_ID}
